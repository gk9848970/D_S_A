// 154. Find Minimum in Rotated Sorted Array II  (May have duplicates)

These work for both non duplicates containing array as well as distinct.

Runtime 8ms
Memory 12.1MB

int findMin(vector<int>& nums) {
        int n = nums.size();
        int start = 0;
        int end = n - 1;
        
        while(start < end) {
            int mid = (start + end) / 2;
            if (nums.at(mid) > nums.at(end)) start = mid + 1;
            else if(nums.at(mid) < nums.at(end)) end = mid;
            else end--;
            }
        
        return nums[start];
}

Runtime 4ms
Memory 12.4MB

int findMin(vector<int>& nums) {
        int n = nums.size();
        int start = 0;
        int end = n - 1;
        
        while(start != end && nums.at(start) == nums.at(end)) {
            start++;
        }
        
        while(start <= end) {
            if(nums.at(start) <= (nums.at(end))) {
                return nums.at(start);
            }
            
            int mid = (start + end) / 2;
            
            if (nums.at(start) <= nums.at(mid)) start = mid + 1;
            else if(nums.at(mid) <= nums.at(end)) end = mid;                   
            }
        
        return -1;
}